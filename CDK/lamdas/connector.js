"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const history_service_1 = require("./services/history.service");
const loan_service_1 = require("./services/loan.service");
exports.handler = async (event) => {
    switch (event.info.fieldName) {
        case "getDashboard":
            return await loan_service_1.LoanService.getDashboard();
        case "getLoans":
            return await loan_service_1.LoanService.getLoans(event.arguments.isActive);
        case "getLoanByID":
            return await loan_service_1.LoanService.getLoanByID(event.arguments.loanID);
        case "createLoan":
            return await loan_service_1.LoanService.createLoan(event.arguments.loan);
        case "updateLoan":
            return await loan_service_1.LoanService.updateLoan(event.arguments.loan);
        case "changeLoanStatus":
            return await loan_service_1.LoanService.changeLoanStatus(event.arguments.loanID, event.arguments.isActive);
        case "updatePendingAmount":
            return await loan_service_1.LoanService.updatePendingAmount(event.arguments.loanID, event.arguments.interestPaid, event.arguments.dateOfPaid);
        case "deleteLoan":
            return await loan_service_1.LoanService.deleteLoan(event.arguments.loanID);
        case "getLoanHistoryByID":
            return await history_service_1.HistoryService.getLoanHistoryByID(event.arguments.loanID);
        default:
            return null;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0VBQTREO0FBQzVELDBEQUFzRDtBQUV0RCxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFnQixFQUFFLEVBQUU7SUFDekMsUUFBUSxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtRQUMxQixLQUFLLGNBQWM7WUFDZixPQUFPLE1BQU0sMEJBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUM1QyxLQUFLLFVBQVU7WUFDWCxPQUFPLE1BQU0sMEJBQVcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRSxLQUFLLGFBQWE7WUFDZCxPQUFPLE1BQU0sMEJBQVcsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRSxLQUFLLFlBQVk7WUFDYixPQUFPLE1BQU0sMEJBQVcsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5RCxLQUFLLFlBQVk7WUFDYixPQUFPLE1BQU0sMEJBQVcsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5RCxLQUFLLGtCQUFrQjtZQUNuQixPQUFPLE1BQU0sMEJBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hHLEtBQUsscUJBQXFCO1lBQ3RCLE9BQU8sTUFBTSwwQkFBVyxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDbEksS0FBSyxZQUFZO1lBQ2IsT0FBTyxNQUFNLDBCQUFXLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDaEUsS0FBSyxvQkFBb0I7WUFDckIsT0FBTyxNQUFNLGdDQUFjLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMzRTtZQUNJLE9BQU8sSUFBSSxDQUFDO0tBQ25CO0FBQ0wsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGlzdG9yeVNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlcy9oaXN0b3J5LnNlcnZpY2VcIjtcbmltcG9ydCB7IExvYW5TZXJ2aWNlIH0gZnJvbSBcIi4vc2VydmljZXMvbG9hbi5zZXJ2aWNlXCI7XG5cbmV4cG9ydHMuaGFuZGxlciA9IGFzeW5jIChldmVudDpMb2FuRXZlbnRzKSA9PiB7XG4gICAgc3dpdGNoIChldmVudC5pbmZvLmZpZWxkTmFtZSkge1xuICAgICAgICBjYXNlIFwiZ2V0RGFzaGJvYXJkXCI6XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgTG9hblNlcnZpY2UuZ2V0RGFzaGJvYXJkKCk7XG4gICAgICAgIGNhc2UgXCJnZXRMb2Fuc1wiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLmdldExvYW5zKGV2ZW50LmFyZ3VtZW50cy5pc0FjdGl2ZSk7XG4gICAgICAgIGNhc2UgXCJnZXRMb2FuQnlJRFwiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLmdldExvYW5CeUlEKGV2ZW50LmFyZ3VtZW50cy5sb2FuSUQpO1xuICAgICAgICBjYXNlIFwiY3JlYXRlTG9hblwiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLmNyZWF0ZUxvYW4oZXZlbnQuYXJndW1lbnRzLmxvYW4pO1xuICAgICAgICBjYXNlIFwidXBkYXRlTG9hblwiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLnVwZGF0ZUxvYW4oZXZlbnQuYXJndW1lbnRzLmxvYW4pO1xuICAgICAgICBjYXNlIFwiY2hhbmdlTG9hblN0YXR1c1wiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLmNoYW5nZUxvYW5TdGF0dXMoZXZlbnQuYXJndW1lbnRzLmxvYW5JRCwgZXZlbnQuYXJndW1lbnRzLmlzQWN0aXZlKTtcbiAgICAgICAgY2FzZSBcInVwZGF0ZVBlbmRpbmdBbW91bnRcIjpcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBMb2FuU2VydmljZS51cGRhdGVQZW5kaW5nQW1vdW50KGV2ZW50LmFyZ3VtZW50cy5sb2FuSUQsIGV2ZW50LmFyZ3VtZW50cy5pbnRlcmVzdFBhaWQsIGV2ZW50LmFyZ3VtZW50cy5kYXRlT2ZQYWlkKVxuICAgICAgICBjYXNlIFwiZGVsZXRlTG9hblwiOlxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IExvYW5TZXJ2aWNlLmRlbGV0ZUxvYW4oZXZlbnQuYXJndW1lbnRzLmxvYW5JRCk7XG4gICAgICAgIGNhc2UgXCJnZXRMb2FuSGlzdG9yeUJ5SURcIjpcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBIaXN0b3J5U2VydmljZS5nZXRMb2FuSGlzdG9yeUJ5SUQoZXZlbnQuYXJndW1lbnRzLmxvYW5JRCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59Il19